{"ast":null,"code":"var _jsxFileName = \"/home/sagar/Documents/web devolopment/Projects/react-hamburger-menu/src/components/Hamburger.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport { Link } from \"react-router-dom\";\nimport { staggerText, staggerReveal, fadeInUp, handleHover, handleHoverExit, handleCityReturn, handleCity, staggerRevealClose } from \"./Animations\";\nimport dallas from \"../images/dallas.webp\";\nimport austin from \"../images/austin.webp\";\nimport newyork from \"../images/newyork.webp\";\nimport sanfrancisco from \"../images/sanfrancisco.webp\";\nimport beijing from \"../images/beijing.webp\";\nconst cities = [{\n  name: \"Dallas\",\n  image: dallas\n}, {\n  name: \"Austin\",\n  image: austin\n}, {\n  name: \"New York\",\n  image: newyork\n}, {\n  name: \"San Francisco\",\n  image: sanfrancisco\n}, {\n  name: \"Beijing\",\n  image: beijing\n}];\n\nconst Hamburger = ({\n  state\n}) => {\n  // Create varibles of our dom nodes\n  let menuLayer = useRef(null);\n  let reveal1 = useRef(null);\n  let reveal2 = useRef(null);\n  let cityBackground = useRef(null);\n  let line1 = useRef(null);\n  let line2 = useRef(null);\n  let line3 = useRef(null);\n  let info = useRef(null);\n  useEffect(() => {\n    // If the menu is open and we click the menu button to close it.\n    if (state.clicked === false) {\n      // If menu is closed and we want to open it.\n      staggerRevealClose(reveal2, reveal1); // Set menu to display none\n\n      gsap.to(menuLayer, {\n        duration: 1,\n        css: {\n          display: \"none\"\n        }\n      });\n    } else if (state.clicked === true || state.clicked === true && state.initial === null) {\n      // Set menu to display block\n      gsap.to(menuLayer, {\n        duration: 0,\n        css: {\n          display: \"block\"\n        }\n      }); //Allow menu to have height of 100%\n\n      gsap.to([reveal1, reveal2], {\n        duration: 0,\n        opacity: 1,\n        height: \"100%\"\n      });\n      staggerReveal(reveal1, reveal2);\n      fadeInUp(info);\n      staggerText(line1, line2, line3);\n    }\n  }, [state]);\n  return React.createElement(\"div\", {\n    ref: el => menuLayer = el,\n    className: \"hamburger-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: el => reveal1 = el,\n    className: \"menu-secondary-background-color\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    ref: el => reveal2 = el,\n    className: \"menu-layer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: el => cityBackground = el,\n    className: \"menu-city-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"menu-links\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Link, {\n    onMouseEnter: e => handleHover(e),\n    onMouseOut: e => handleHoverExit(e),\n    ref: el => line1 = el,\n    to: \"/opportunities\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Opportunities\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Link, {\n    onMouseEnter: e => handleHover(e),\n    onMouseOut: e => handleHoverExit(e),\n    ref: el => line2 = el,\n    to: \"/solutions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Solutions\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Link, {\n    onMouseEnter: e => handleHover(e),\n    onMouseOut: e => handleHoverExit(e),\n    ref: el => line3 = el,\n    to: \"/contact-us\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Contact us\")))), React.createElement(\"div\", {\n    ref: el => info = el,\n    className: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Our Promise\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"The passage experienced a surge in popularity during the 1960s when Letraset used it on their dry-transfer sheets, and again during the 90s as desktop publishers bundled the text with their software.\")), React.createElement(\"div\", {\n    className: \"locations\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Locations:\", cities.map(el => React.createElement(\"span\", {\n    key: el.name,\n    onMouseEnter: () => handleCity(el.image, cityBackground),\n    onMouseOut: () => handleCityReturn(cityBackground),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, el.name))))))));\n};\n\nexport default Hamburger;","map":{"version":3,"sources":["/home/sagar/Documents/web devolopment/Projects/react-hamburger-menu/src/components/Hamburger.js"],"names":["React","useRef","useEffect","gsap","Link","staggerText","staggerReveal","fadeInUp","handleHover","handleHoverExit","handleCityReturn","handleCity","staggerRevealClose","dallas","austin","newyork","sanfrancisco","beijing","cities","name","image","Hamburger","state","menuLayer","reveal1","reveal2","cityBackground","line1","line2","line3","info","clicked","to","duration","css","display","initial","opacity","height","el","e","map"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  staggerText,\n  staggerReveal,\n  fadeInUp,\n  handleHover,\n  handleHoverExit,\n  handleCityReturn,\n  handleCity,\n  staggerRevealClose\n} from \"./Animations\";\n\nimport dallas from \"../images/dallas.webp\";\nimport austin from \"../images/austin.webp\";\nimport newyork from \"../images/newyork.webp\";\nimport sanfrancisco from \"../images/sanfrancisco.webp\";\nimport beijing from \"../images/beijing.webp\";\n\nconst cities = [\n  { name: \"Dallas\", image: dallas },\n  { name: \"Austin\", image: austin },\n  { name: \"New York\", image: newyork },\n  { name: \"San Francisco\", image: sanfrancisco },\n  { name: \"Beijing\", image: beijing }\n];\n\nconst Hamburger = ({ state }) => {\n  // Create varibles of our dom nodes\n  let menuLayer = useRef(null);\n  let reveal1 = useRef(null);\n  let reveal2 = useRef(null);\n  let cityBackground = useRef(null);\n  let line1 = useRef(null);\n  let line2 = useRef(null);\n  let line3 = useRef(null);\n  let info = useRef(null);\n\n  useEffect(() => {\n    // If the menu is open and we click the menu button to close it.\n    if (state.clicked === false) {\n      // If menu is closed and we want to open it.\n\n      staggerRevealClose(reveal2, reveal1);\n      // Set menu to display none\n      gsap.to(menuLayer, { duration: 1, css: { display: \"none\" } });\n    } else if (\n      state.clicked === true ||\n      (state.clicked === true && state.initial === null)\n    ) {\n      // Set menu to display block\n      gsap.to(menuLayer, { duration: 0, css: { display: \"block\" } });\n      //Allow menu to have height of 100%\n      gsap.to([reveal1, reveal2], {\n        duration: 0,\n        opacity: 1,\n        height: \"100%\"\n      });\n      staggerReveal(reveal1, reveal2);\n      fadeInUp(info);\n      staggerText(line1, line2, line3);\n    }\n  }, [state]);\n\n  return (\n    <div ref={el => (menuLayer = el)} className='hamburger-menu'>\n      <div\n        ref={el => (reveal1 = el)}\n        className='menu-secondary-background-color'></div>\n      <div ref={el => (reveal2 = el)} className='menu-layer'>\n        <div\n          ref={el => (cityBackground = el)}\n          className='menu-city-background'></div>\n        <div className='container'>\n          <div className='wrapper'>\n            <div className='menu-links'>\n              <nav>\n                <ul>\n                  <li>\n                    <Link\n                      onMouseEnter={e => handleHover(e)}\n                      onMouseOut={e => handleHoverExit(e)}\n                      ref={el => (line1 = el)}\n                      to='/opportunities'>\n                      Opportunities\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      onMouseEnter={e => handleHover(e)}\n                      onMouseOut={e => handleHoverExit(e)}\n                      ref={el => (line2 = el)}\n                      to='/solutions'>\n                      Solutions\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      onMouseEnter={e => handleHover(e)}\n                      onMouseOut={e => handleHoverExit(e)}\n                      ref={el => (line3 = el)}\n                      to='/contact-us'>\n                      Contact us\n                    </Link>\n                  </li>\n                </ul>\n              </nav>\n              <div ref={el => (info = el)} className='info'>\n                <h3>Our Promise</h3>\n                <p>\n                  The passage experienced a surge in popularity during the 1960s\n                  when Letraset used it on their dry-transfer sheets, and again\n                  during the 90s as desktop publishers bundled the text with\n                  their software.\n                </p>\n              </div>\n              <div className='locations'>\n                Locations:\n                {/* Returning the list of cities */}\n                {cities.map(el => (\n                  <span\n                    key={el.name}\n                    onMouseEnter={() => handleCity(el.image, cityBackground)}\n                    onMouseOut={() => handleCityReturn(cityBackground)}>\n                    {el.name}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Hamburger;\n"]},"metadata":{},"sourceType":"module"}